include $(top_srcdir)/Makefile.am.common

-include $(abs_top_builddir)/crypto/libcrypto_la_objects.mk
-include $(abs_top_builddir)/ssl/libssl_la_objects.mk

noinst_LTLIBRARIES = libtls_convenience.la

lib_LTLIBRARIES = libtls.la

EXTRA_DIST = VERSION
EXTRA_DIST += CMakeLists.txt
EXTRA_DIST += tls.sym

if OPENSSLDIR_DEFINED
AM_CPPFLAGS += -DTLS_DEFAULT_CA_FILE=\"@OPENSSLDIR@/cert.pem\"
else
AM_CPPFLAGS += -DTLS_DEFAULT_CA_FILE=\"$(sysconfdir)/ssl/cert.pem\"
endif

libtls_la_LDFLAGS = -version-info @LIBTLS_VERSION@ -no-undefined -export-symbols $(top_srcdir)/tls/tls.sym
libtls_la_LIBADD = libtls_convenience.la

libtls_la_SOURCES = tls.c

libtls_convenience_la_LIBADD = $(libcrypto_la_objects)
libtls_convenience_la_LIBADD += $(libcompat_la_objects)
libtls_convenience_la_LIBADD += $(libcompatnoopt_la_objects)
libtls_convenience_la_LIBADD += $(libssl_la_objects)
libtls_convenience_la_LIBADD += $(PLATFORM_LDADD)


libtls_convenience_la_SOURCES = tls_bio_cb.c
libtls_convenience_la_SOURCES += tls_client.c
libtls_convenience_la_SOURCES += tls_config.c
libtls_convenience_la_SOURCES += tls_conninfo.c
libtls_convenience_la_SOURCES += tls_init.c
libtls_convenience_la_SOURCES += tls_keypair.c
libtls_convenience_la_SOURCES += tls_server.c
libtls_convenience_la_SOURCES += tls_signer.c
libtls_convenience_la_SOURCES += tls_ocsp.c
libtls_convenience_la_SOURCES += tls_peer.c
libtls_convenience_la_SOURCES += tls_util.c
libtls_convenience_la_SOURCES += tls_verify.c
noinst_HEADERS = tls_internal.h

if HOST_WIN
libtls_convenience_la_SOURCES += compat/ftruncate.c
libtls_convenience_la_SOURCES += compat/pread.c
libtls_convenience_la_SOURCES += compat/pwrite.c
endif
