diff -uprN -X mkfile ssl.orig/ssl_both.c ssl/ssl_both.c
--- ssl.orig/ssl_both.c	Fri Jan  3 17:32:27 2020
+++ ssl/ssl_both.c	Fri Jan  3 14:16:14 2020
@@ -317,7 +317,7 @@ ssl3_send_change_cipher_spec(SSL *s, int
 	memset(&cbb, 0, sizeof(cbb));
 
 	if (S3I(s)->hs.state == a) {
-		if (!CBB_init_fixed(&cbb, s->internal->init_buf->data,
+		if (!CBB_init_fixed(&cbb, (unsigned char*)s->internal->init_buf->data,
 		    s->internal->init_buf->length))
 			goto err;
 		if (!CBB_add_u8(&cbb, SSL3_MT_CCS))
diff -uprN -X mkfile ssl.orig/ssl_cert.c ssl/ssl_cert.c
--- ssl.orig/ssl_cert.c	Fri Jan  3 17:32:27 2020
+++ ssl/ssl_cert.c	Fri Jan  3 14:16:14 2020
@@ -133,7 +133,7 @@
 int
 SSL_get_ex_data_X509_STORE_CTX_idx(void)
 {
-	static volatile int ssl_x509_store_ctx_idx = -1;
+	static int ssl_x509_store_ctx_idx = -1;
 	int got_write_lock = 0;
 
 	CRYPTO_r_lock(CRYPTO_LOCK_SSL_CTX);
diff -uprN -X mkfile ssl.orig/ssl_tlsext.c ssl/ssl_tlsext.c
--- ssl.orig/ssl_tlsext.c	Fri Jan  3 17:32:27 2020
+++ ssl/ssl_tlsext.c	Fri Jan  3 14:16:15 2020
@@ -648,7 +648,7 @@ tlsext_sni_server_parse(SSL *s, CBS *cbs
 			*alert = TLS1_AD_UNRECOGNIZED_NAME;
 			return 0;
 		}
-		if (!CBS_mem_equal(&host_name, s->session->tlsext_hostname,
+		if (!CBS_mem_equal(&host_name, (unsigned char*)s->session->tlsext_hostname,
 		    strlen(s->session->tlsext_hostname))) {
 			*alert = TLS1_AD_UNRECOGNIZED_NAME;
 			return 0;
diff -uprN -X mkfile ssl.orig/ssl_transcript.c ssl/ssl_transcript.c
--- ssl.orig/ssl_transcript.c	Fri Jan  3 17:32:27 2020
+++ ssl/ssl_transcript.c	Fri Jan  3 14:16:15 2020
@@ -176,7 +176,7 @@ tls1_transcript_data(SSL *s, const unsig
 	if (S3I(s)->handshake_transcript == NULL)
 		return 0;
 
-	*data = S3I(s)->handshake_transcript->data;
+	*data = (const unsigned char*)S3I(s)->handshake_transcript->data;
 	*len = S3I(s)->handshake_transcript->length;
 
 	return 1;
diff -uprN -X mkfile ssl.orig/t1_lib.c ssl/t1_lib.c
--- ssl.orig/t1_lib.c	Fri Jan  3 17:32:27 2020
+++ ssl/t1_lib.c	Fri Jan  3 14:16:15 2020
@@ -972,7 +972,7 @@ tls_decrypt_ticket(SSL *s, CBS *session_
 	if (HMAC_Update(hctx, CBS_data(&ticket_encdata),
 	    CBS_len(&ticket_encdata)) <= 0)
 		goto err;
-	if (HMAC_Final(hctx, hmac, &hlen) <= 0)
+	if (HMAC_Final(hctx, hmac, (unsigned int*)&hlen) <= 0)
 		goto err;
 
 	if (!CBS_mem_equal(&ticket_hmac, hmac, hlen))
diff -uprN -X mkfile ssl.orig/tls13_client.c ssl/tls13_client.c
--- ssl.orig/tls13_client.c	Fri Jan  3 17:32:27 2020
+++ ssl/tls13_client.c	Fri Jan  3 14:16:17 2020
@@ -121,7 +121,7 @@ tls13_use_legacy_client(struct tls13_ctx
 	if (!BUF_MEM_grow_clean(s->internal->init_buf, CBS_len(&cbs) + 4))
 		goto err;
 
-	if (!CBS_write_bytes(&cbs, s->internal->init_buf->data + 4,
+	if (!CBS_write_bytes(&cbs, (uint8_t *)s->internal->init_buf->data + 4,
 	    s->internal->init_buf->length - 4, NULL))
 		goto err;
 
@@ -591,7 +591,7 @@ tls13_server_certificate_verify_recv(str
 	if (!CBB_add_bytes(&cbb, cert_verify_pad, sizeof(cert_verify_pad)))
 		goto err;
 	if (!CBB_add_bytes(&cbb, server_cert_verify_context,
-	    strlen(server_cert_verify_context)))
+	    strlen((const char *)server_cert_verify_context)))
 		goto err;
 	if (!CBB_add_u8(&cbb, 0))
 		goto err;
@@ -643,7 +643,7 @@ int
 tls13_server_finished_recv(struct tls13_ctx *ctx)
 {
 	struct tls13_secrets *secrets = ctx->hs->secrets;
-	struct tls13_secret context = { .data = "", .len = 0 };
+	struct tls13_secret context = { .data = (unsigned char *)"", .len = 0 };
 	struct tls13_secret finished_key;
 	uint8_t transcript_hash[EVP_MAX_MD_SIZE];
 	size_t transcript_hash_len;
@@ -724,7 +724,7 @@ int
 tls13_client_finished_send(struct tls13_ctx *ctx)
 {
 	struct tls13_secrets *secrets = ctx->hs->secrets;
-	struct tls13_secret context = { .data = "", .len = 0 };
+	struct tls13_secret context = { .data = (unsigned char *)"", .len = 0 };
 	struct tls13_secret finished_key;
 	uint8_t transcript_hash[EVP_MAX_MD_SIZE];
 	size_t transcript_hash_len;
diff -uprN -X mkfile ssl.orig/tls13_key_schedule.c ssl/tls13_key_schedule.c
--- ssl.orig/tls13_key_schedule.c	Fri Jan  3 17:32:27 2020
+++ ssl/tls13_key_schedule.c	Fri Jan  3 16:49:12 2020
@@ -186,9 +186,9 @@ tls13_hkdf_expand_label(struct tls13_sec
 		goto err;
 	if (!CBB_add_u8_length_prefixed(&cbb, &child))
 		goto err;
-	if (!CBB_add_bytes(&child, tls13_plabel, strlen(tls13_plabel)))
+	if (!CBB_add_bytes(&child, (unsigned char *)tls13_plabel, strlen(tls13_plabel)))
 		goto err;
-	if (!CBB_add_bytes(&child, label, strlen(label)))
+	if (!CBB_add_bytes(&child, (unsigned char *)label, strlen(label)))
 		goto err;
 	if (!CBB_add_u8_length_prefixed(&cbb, &child))
 		goto err;
@@ -354,7 +354,7 @@ tls13_derive_application_secrets(struct 
 int
 tls13_update_client_traffic_secret(struct tls13_secrets *secrets)
 {
-	struct tls13_secret context = { .data = "", .len = 0 };
+	struct tls13_secret context = { .data = (unsigned char*)"", .len = 0 };
 
 	if (!secrets->init_done || !secrets->early_done ||
 	    !secrets->handshake_done || !secrets->schedule_done)
@@ -368,7 +368,7 @@ tls13_update_client_traffic_secret(struc
 int
 tls13_update_server_traffic_secret(struct tls13_secrets *secrets)
 {
-	struct tls13_secret context = { .data = "", .len = 0 };
+	struct tls13_secret context = { .data = (unsigned char*)"", .len = 0 };
 
 	if (!secrets->init_done || !secrets->early_done ||
 	    !secrets->handshake_done || !secrets->schedule_done)
diff -uprN -X mkfile ssl.orig/tls13_record_layer.c ssl/tls13_record_layer.c
--- ssl.orig/tls13_record_layer.c	Fri Jan  3 17:32:27 2020
+++ ssl/tls13_record_layer.c	Fri Jan  3 14:16:17 2020
@@ -377,7 +377,7 @@ tls13_record_layer_set_traffic_key(const
     const EVP_MD *hash, struct tls13_secret *iv, struct tls13_secret *nonce,
     struct tls13_secret *traffic_key)
 {
-	struct tls13_secret context = { .data = "", .len = 0 };
+	struct tls13_secret context = { .data = (unsigned char *)"", .len = 0 };
 	struct tls13_secret key = { .data = NULL, .len = 0 };
 	int ret = 0;
 
